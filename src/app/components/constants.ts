export const javascript = {
  javascript: {
    level1: [
      {
        title: 'یافتن بزرگ‌ترین عدد در یک آرایه',
        description:
          'تابعی بنویسید که بزرگ‌ترین عدد را در یک آرایه از اعداد پیدا کند. آرایه ورودی ممکن است شامل اعداد منفی و مثبت باشد و باید بتوانید بزرگ‌ترین عدد را بدون استفاده از متدهای داخلی جاوا اسکریپت پیدا کنید.',
      },
      {
        title: 'معکوس کردن یک رشته',
        description:
          'تابعی بنویسید که یک رشته داده شده را معکوس کند. به عنوان مثال، اگر رشته ورودی "hello" باشد، باید "olleh" را برگرداند. توجه داشته باشید که باید این کار را بدون استفاده از متد داخلی JavaScript انجام دهید.',
      },
      {
        title: 'محاسبه مجموع اعداد یک آرایه',
        description:
          'تابعی بنویسید که مجموع اعداد یک آرایه را محاسبه کند. آرایه ورودی ممکن است شامل اعداد صحیح و اعشاری باشد و باید بتوانید مجموع تمامی اعداد را به درستی محاسبه کنید.',
      },
      {
        title: 'محاسبه فاکتوریل یک عدد',
        description:
          'تابعی بنویسید که فاکتوریل یک عدد داده شده را محاسبه کند. فاکتوریل عدد n به صورت n! محاسبه می‌شود و برابر با حاصل‌ضرب تمامی اعداد صحیح مثبت کمتر یا مساوی n است.',
      },
      {
        title: 'پیدا کردن عدد اول در یک آرایه',
        description:
          'تابعی بنویسید که اولین عدد اول را در یک آرایه پیدا کند. عدد اول عددی است که فقط بر خود و ۱ قابل تقسیم باشد. آرایه ورودی ممکن است شامل اعداد منفی و مثبت باشد.',
      },
      {
        title: 'یافتن کوچک‌ترین عدد در یک آرایه',
        description:
          'تابعی بنویسید که کوچک‌ترین عدد را در یک آرایه پیدا کند. آرایه ورودی ممکن است شامل اعداد منفی و مثبت باشد و باید بتوانید کوچک‌ترین عدد را بدون استفاده از متدهای داخلی جاوا اسکریپت پیدا کنید.',
      },
      {
        title: 'ساخت یک تابع برای محاسبه توان یک عدد',
        description:
          'تابعی بنویسید که توان یک عدد را محاسبه کند. به عنوان مثال، اگر ورودی عدد ۲ و توان ۳ باشد، نتیجه باید ۸ باشد (۲^۳ = ۸). باید این کار را بدون استفاده از متدهای داخلی JavaScript انجام دهید.',
      },
      {
        title: 'شمارش تعداد وقوع یک عنصر در آرایه',
        description:
          'تابعی بنویسید که تعداد وقوع یک عنصر خاص را در یک آرایه شمارش کند. به عنوان مثال، اگر آرایه [1, 2, 3, 2, 2, 4] و عنصر مورد نظر ۲ باشد، نتیجه باید ۳ باشد.',
      },
      {
        title: 'معکوس کردن یک عدد',
        description:
          'تابعی بنویسید که عدد داده شده را معکوس کند. به عنوان مثال، اگر ورودی عدد 12345 باشد، خروجی باید 54321 باشد. توجه داشته باشید که باید این کار را بدون استفاده از متدهای داخلی JavaScript انجام دهید.',
      },
      {
        title: 'بررسی زوج یا فرد بودن یک عدد',
        description:
          'تابعی بنویسید که بررسی کند آیا یک عدد زوج است یا فرد. عدد زوج عددی است که بر ۲ قابل تقسیم باشد و عدد فرد عددی است که بر ۲ قابل تقسیم نباشد.',
      },
    ],
    level2: [
      {
        title: 'ساخت یک لیست ساده‌ی وظایف',
        description:
          'یک لیست وظایف ساده بسازید با قابلیت اضافه کردن و حذف کردن. این لیست باید دارای ورودی برای اضافه کردن وظیفه جدید و گزینه‌ای برای حذف وظایف موجود باشد.',
      },
      {
        title: 'پیاده‌سازی تابع Debounce',
        description:
          'یک تابع debounce بسازید که اجرای تابعی را که به آن داده شده، محدود کند. برای مثال، اگر کاربر در حال تایپ کردن باشد، تابع باید فقط پس از توقف تایپ برای مدت زمان معین اجرا شود.',
      },
      {
        title: 'ساخت یک کرنر با زمانبندی',
        description:
          'تابعی بنویسید که با استفاده از setTimeout یک کرنر (کنترل‌کننده زمانی) بسازد. این تابع باید بعد از گذشت زمان مشخصی یک عمل را انجام دهد.',
      },
      {
        title: 'ساخت یک جستجوی زنده',
        description:
          'یک تابع بنویسید که جستجوی زنده را با استفاده از debounce پیاده‌سازی کند. به این صورت که با تایپ کاربر، نتایج جستجو به صورت زنده و با تأخیر معین نمایش داده شوند.',
      },
      {
        title: 'مدیریت وضعیت با استفاده از Event Emitter',
        description:
          'مدیریت وضعیت را با استفاده از Event Emitter پیاده‌سازی کنید. این به معنای استفاده از یک شیء Event Emitter برای ارسال و دریافت رویدادها و به‌روزرسانی وضعیت برنامه است.',
      },
      {
        title: 'ساخت یک تابع برای محاسبه میانگین آرایه',
        description:
          'تابعی بنویسید که میانگین مقادیر یک آرایه را محاسبه کند. به این ترتیب که مجموع مقادیر آرایه را محاسبه کرده و آن را بر تعداد عناصر تقسیم کند.',
      },
      {
        title: 'پیاده‌سازی تابعی برای پیدا کردن عناصر تکراری',
        description:
          'تابعی بنویسید که عناصر تکراری را در یک آرایه پیدا کند. این تابع باید تمامی عناصر تکراری در آرایه را شناسایی کرده و لیستی از آنها را برگرداند.',
      },
      {
        title: 'ساخت یک شمارنده با Local Storage',
        description:
          'شمارنده‌ای بسازید که از Local Storage برای ذخیره وضعیت استفاده کند. شمارنده باید بتواند مقدار خود را در Local Storage ذخیره کرده و مقدار فعلی را از آن بارگذاری کند.',
      },
      {
        title: 'پیاده‌سازی تابعی برای جدا کردن رشته‌ها',
        description:
          'تابعی بنویسید که رشته‌های یک آرایه را با جداکننده مشخصی ترکیب کند. به عنوان مثال، اگر آرایه ["Hello", "World"] و جداکننده "-" باشد، نتیجه باید "Hello-World" باشد.',
      },
      {
        title: 'ساخت یک لودر بارگذاری',
        description:
          'یک لودر بارگذاری ساده با استفاده از جاوا اسکریپت بسازید. این لودر باید به‌طور موقت برای نمایش وضعیت بارگذاری داده‌ها یا عملیات دیگر استفاده شود.',
      },
    ],
    level3: [
      {
        title: 'ساخت یک جدول دینامیک با قابلیت فیلتر و مرتب‌سازی',
        description:
          'یک جدول دینامیک بسازید که بتواند داده‌ها را بر اساس معیارهای مختلف فیلتر و مرتب کند. این جدول باید شامل قابلیت‌هایی مانند جستجو، فیلتر بر اساس ستون و مرتب‌سازی داده‌ها باشد.',
      },
      {
        title: 'ساخت یک سیستم کش کردن داده‌ها',
        description:
          'یک سیستم کش برای داده‌ها با استفاده از جاوا اسکریپت بسازید. این سیستم باید بتواند داده‌های دریافتی را در کش ذخیره کرده و در درخواست‌های بعدی از آن استفاده کند.',
      },
      {
        title: 'پیاده‌سازی مدیریت وضعیت با Context API',
        description:
          'مدیریت وضعیت با استفاده از Context API را در یک پروژه پیاده‌سازی کنید. این شامل تعریف یک Context و استفاده از آن در کامپوننت‌های مختلف است.',
      },
      {
        title: 'ساخت یک سیستم پیغام‌رسانی بین کامپوننت‌ها',
        description:
          'سیستمی برای پیغام‌رسانی بین کامپوننت‌ها بسازید. این سیستم باید بتواند پیغام‌ها را از یک کامپوننت ارسال کرده و به کامپوننت‌های دیگر منتقل کند.',
      },
      {
        title: 'پیاده‌سازی Authentication و Authorization',
        description:
          'سیستمی برای مدیریت Authentication و Authorization پیاده‌سازی کنید. این سیستم باید قادر به شناسایی کاربران و مدیریت دسترسی آنها به بخش‌های مختلف اپلیکیشن باشد.',
      },
      {
        title: 'ساخت یک سیستم Pagination برای داده‌ها',
        description:
          'سیستمی برای Pagination داده‌ها بسازید. این سیستم باید قادر باشد داده‌ها را در صفحات مختلف نمایش دهد و امکان جابجایی بین صفحات را فراهم کند.',
      },
      {
        title: 'پیاده‌سازی سیستم Lazy Loading برای تصاویر',
        description:
          'سیستمی برای Lazy Loading تصاویر بسازید. این سیستم باید به‌گونه‌ای عمل کند که تصاویر فقط زمانی که در viewport قرار دارند، بارگذاری شوند.',
      },
      {
        title: 'ساخت یک سیستم Notifications',
        description:
          'سیستم Notifications را پیاده‌سازی کنید که قادر به نمایش اعلان‌ها با ویژگی‌های مختلف مانند زمان انقضا و نوع (خطا، موفقیت، هشدار) باشد.',
      },
      {
        title: 'پیاده‌سازی WebSockets برای ارتباط Real-time',
        description:
          'از WebSockets برای پیاده‌سازی ارتباط real-time بین کلاینت و سرور استفاده کنید. این شامل ارسال و دریافت پیام‌ها به‌صورت زنده است.',
      },
      {
        title: 'ساخت یک سیستم Drag and Drop',
        description:
          'سیستم Drag and Drop را پیاده‌سازی کنید. این سیستم باید به کاربران این امکان را بدهد که عناصر مختلف را با کشیدن و رها کردن جابجا کنند.',
      },
    ],
  },
};

export const typescript = {
  typescript: {
    level1: [
      {
        title: 'ایجاد یک رابط ساده در TypeScript',
        description:
          'یک رابط (Interface) ساده در TypeScript برای یک شیء کاربر تعریف کنید. این رابط باید شامل خصوصیات نام و سن باشد و بتوانید آن را در یک شیء استفاده کنید.',
      },
      {
        title: 'پیاده‌سازی یک تابع با Generics در TypeScript',
        description:
          'یک تابع با استفاده از Generics در TypeScript بنویسید. این تابع باید بتواند با انواع مختلف داده‌ها کار کند و نوع داده ورودی و خروجی را به‌طور دینامیک تعیین کند.',
      },
      {
        title: 'تعریف نوع‌های پایه در TypeScript',
        description:
          'انواع پایه مانند string و number را در TypeScript تعریف کنید. به عنوان مثال، نوع‌های متغیرهایی مانند نام کاربر و سن را تعریف کنید.',
      },
      {
        title: 'ساخت یک کلاس ساده در TypeScript',
        description:
          'یک کلاس ساده در TypeScript تعریف کنید و آن را استفاده کنید. این کلاس باید شامل متدهایی برای تنظیم و دریافت مقادیر خصوصیات باشد.',
      },
      {
        title: 'استفاده از Type Guards در TypeScript',
        description:
          'از Type Guards برای بررسی نوع‌ها استفاده کنید. به عنوان مثال، تابعی بنویسید که بررسی کند آیا یک متغیر از نوع string است یا خیر.',
      },
      {
        title: 'پیاده‌سازی انواع یونین در TypeScript',
        description:
          'از انواع یونین در TypeScript برای تعریف انواع مختلف استفاده کنید. به عنوان مثال، تابعی بنویسید که بتواند هم عدد و هم رشته را به عنوان ورودی بپذیرد.',
      },
      {
        title: 'ساخت یک Enum در TypeScript',
        description:
          'از Enum برای تعریف مجموعه‌ای از مقادیر ثابت استفاده کنید. به عنوان مثال، Enum برای نمایش وضعیت‌های مختلف یک درخواست (در حال پردازش، موفق، ناموفق) ایجاد کنید.',
      },
      {
        title: 'ایجاد یک تابع با ویژگی‌های اختیاری',
        description:
          'تابعی بنویسید که پارامترهای اختیاری را در TypeScript مدیریت کند. به عنوان مثال، تابعی بنویسید که مقدار پیش‌فرض برای پارامترهای اختیاری داشته باشد.',
      },
      {
        title: 'تعریف یک نوع داده پیچیده',
        description:
          'یک نوع داده پیچیده با استفاده از ترکیب انواع تعریف کنید. به عنوان مثال، نوع داده‌ای تعریف کنید که شامل یک شیء با خصوصیات مختلف و آرایه‌ای از اشیاء باشد.',
      },
      {
        title: 'ساخت یک کامپوننت TypeScript با PropTypes',
        description:
          'یک کامپوننت در TypeScript بسازید و از PropTypes برای نوع‌های Props استفاده کنید. این کامپوننت باید بتواند Props با انواع مختلف را دریافت کرده و به درستی نمایش دهد.',
      },
    ],
    level2: [
      {
        title: 'ساخت یک کامپوننت TypeScript با Props',
        description:
          'یک کامپوننت React در TypeScript بسازید که Props دریافت کند. این کامپوننت باید بتواند Props را به‌طور صحیح تایپ کرده و در JSX استفاده کند.',
      },
      {
        title: 'پیاده‌سازی یک Enum در TypeScript',
        description:
          'از Enum در TypeScript در یک پروژه استفاده کنید. به عنوان مثال، Enum برای نمایش وضعیت‌های مختلف یک درخواست (در حال پردازش، موفق، ناموفق) ایجاد کنید و از آن در کامپوننت‌ها استفاده کنید.',
      },
      {
        title: 'ساخت یک Hook سفارشی برای مدیریت فرم‌ها',
        description:
          'یک Hook سفارشی برای مدیریت وضعیت فرم‌ها در TypeScript بسازید. این Hook باید شامل توابعی برای مدیریت ورودی‌ها، اعتبارسنجی و ارسال فرم باشد.',
      },
      {
        title: 'مدیریت وابستگی‌ها با TypeScript',
        description:
          'مدیریت وابستگی‌ها را با استفاده از TypeScript پیاده‌سازی کنید. این شامل نصب و استفاده از بسته‌های مختلف TypeScript و مدیریت نسخه‌ها است.',
      },
      {
        title: 'پیاده‌سازی امنیت و اعتبارسنجی در TypeScript',
        description:
          'امنیت و اعتبارسنجی داده‌ها را در پروژه‌های TypeScript پیاده‌سازی کنید. این شامل بررسی ورودی‌های کاربر و پیاده‌سازی مکانیسم‌های امنیتی است.',
      },
      {
        title: 'ساخت یک سرویس API با TypeScript',
        description:
          'یک سرویس API با استفاده از TypeScript و Express بسازید. این سرویس باید بتواند درخواست‌های مختلف HTTP را مدیریت کند و پاسخ‌های مناسب را ارسال کند.',
      },
      {
        title: 'پیاده‌سازی level2ware در Express با TypeScript',
        description:
          'level2ware در Express را با استفاده از TypeScript پیاده‌سازی کنید. این level2ware باید بتواند درخواست‌ها را پردازش کرده و به‌روزرسانی‌های مختلفی را انجام دهد.',
      },
      {
        title: 'ساخت یک مدل داده با TypeScript',
        description:
          'مدل‌های داده پیچیده را با استفاده از TypeScript تعریف کنید. به عنوان مثال، مدلی برای نمایش اطلاعات کاربر و مشخصات آن ایجاد کنید.',
      },
      {
        title: 'پیاده‌سازی تست‌های واحد با TypeScript',
        description:
          'تست‌های واحد را با استفاده از TypeScript و Jest بنویسید. این تست‌ها باید شامل تست‌های مختلف برای توابع و کامپوننت‌ها باشد.',
      },
      {
        title: 'ساخت یک اپلیکیشن SPA با TypeScript',
        description:
          'یک اپلیکیشن تک صفحه‌ای (SPA) با استفاده از TypeScript بسازید. این اپلیکیشن باید شامل مسیرها، وضعیت و تعاملات مختلف باشد.',
      },
    ],
  },
};

export const react = {
  react: {
    level1: [
      {
        title: 'ساخت یک کامپوننت ساده با React',
        description:
          'یک کامپوننت ساده با React بسازید که فقط یک دکمه را نمایش دهد. این کامپوننت باید شامل یک حالت (state) باشد که با کلیک بر روی دکمه تغییر کند.',
      },
      {
        title: 'استفاده از useState برای مدیریت وضعیت',
        description:
          'یک کامپوننت بسازید که از useState برای مدیریت وضعیت داخلی استفاده کند. به عنوان مثال، یک کامپوننت شمارنده بسازید که با کلیک بر روی دکمه تعداد را افزایش دهد.',
      },
      {
        title: 'پیاده‌سازی useEffect برای بارگذاری داده‌ها',
        description:
          'یک کامپوننت بسازید که از useEffect برای بارگذاری داده‌ها از یک API استفاده کند. داده‌های بارگذاری شده باید در حالت (state) ذخیره شده و به کاربر نمایش داده شوند.',
      },
      {
        title: 'ساخت یک فرم ساده با React',
        description:
          'یک فرم ساده با استفاده از React بسازید. این فرم باید شامل فیلدهای ورودی برای نام و ایمیل و یک دکمه ارسال باشد. داده‌های فرم باید به درستی مدیریت و نمایش داده شوند.',
      },
      {
        title: 'استفاده از props برای انتقال داده‌ها',
        description:
          'کامپوننتی بسازید که داده‌ها را از والدین به فرزندان منتقل کند. این شامل استفاده از props برای ارسال داده‌ها به کامپوننت‌های فرزند است.',
      },
      {
        title: 'ساخت یک لیست از آیتم‌ها با React',
        description:
          'یک لیست ساده از آیتم‌ها را با استفاده از React بسازید. این لیست باید داده‌ها را از یک آرایه گرفته و به صورت داینامیک در کامپوننت نمایش دهد.',
      },
      {
        title: 'مدیریت رویدادها با React',
        description:
          'کامپوننتی بسازید که رویدادهای مختلف مانند کلیک بر روی دکمه را مدیریت کند. این کامپوننت باید بتواند رویدادها را شناسایی کرده و به درستی واکنش نشان دهد.',
      },
      {
        title: 'ساخت یک کامپوننت قابل استفاده مجدد',
        description:
          'کامپوننتی بسازید که قابل استفاده مجدد در بخش‌های مختلف اپلیکیشن باشد. این کامپوننت باید پارامترهای مختلفی را بپذیرد و نتایج مختلفی را تولید کند.',
      },
      {
        title: 'پیاده‌سازی Context API برای مدیریت وضعیت',
        description:
          'Context API را برای مدیریت وضعیت در یک اپلیکیشن React پیاده‌سازی کنید. این شامل تعریف یک Context، Provider و استفاده از آن در کامپوننت‌های مختلف است.',
      },
      {
        title: 'ساخت یک کامپوننت با استفاده از Hooks',
        description:
          'کامپوننتی بسازید که از React Hooks استفاده کند. این شامل استفاده از useState و useEffect برای مدیریت وضعیت و بارگذاری داده‌ها است.',
      },
    ],
    level2: [
      {
        title: 'ساخت یک کامپوننت فرم با Validation',
        description:
          'کامپوننت فرم با Validation را با استفاده از React و یک کتابخانه مانند Formik یا React Hook Form بسازید. فرم باید ورودی‌های مختلف را بررسی کرده و اعتبارسنجی را انجام دهد.',
      },
      {
        title: 'پیاده‌سازی یک کامپوننت پیچیده با استفاده از Context',
        description:
          'یک کامپوننت پیچیده بسازید که از Context API برای مدیریت وضعیت استفاده کند. این شامل ایجاد Context، Provider و مصرف Context در کامپوننت‌های مختلف است.',
      },
      {
        title: 'ساخت یک کامپوننت با قابلیت Drag and Drop',
        description:
          'یک کامپوننت Drag and Drop با استفاده از React بسازید. این کامپوننت باید قادر به کشیدن و رها کردن عناصر مختلف باشد و وضعیت آنها را به‌روزرسانی کند.',
      },
      {
        title: 'پیاده‌سازی یک کامپوننت Tabbed Interface',
        description:
          'کامپوننتی بسازید که یک رابط تب‌دار (Tabbed Interface) را پیاده‌سازی کند. این کامپوننت باید بتواند بین تب‌ها جابجا شده و محتوای مربوط به هر تب را نمایش دهد.',
      },
      {
        title: 'ساخت یک کامپوننت با استفاده از Suspense و Lazy',
        description:
          'کامپوننتی بسازید که از React Suspense و React.lazy برای بارگذاری تنبل (Lazy Loading) استفاده کند. این کامپوننت باید بتواند کامپوننت‌های دیگر را به‌طور تنبل بارگذاری کند و هنگام بارگذاری، یک لودر نمایش دهد.',
      },
      {
        title: 'پیاده‌سازی یک سیستم Pagination',
        description:
          'سیستم Pagination را در یک کامپوننت React پیاده‌سازی کنید. این سیستم باید داده‌ها را در صفحات مختلف نمایش دهد و امکان جابجایی بین صفحات را فراهم کند.',
      },
      {
        title: 'ساخت یک کامپوننت با تعاملات پیچیده',
        description:
          'کامپوننتی بسازید که تعاملات پیچیده‌ای با کاربران داشته باشد. به عنوان مثال، کامپوننتی با فرم‌های چند مرحله‌ای و امکان ذخیره وضعیت در بین مراحل.',
      },
      {
        title: 'پیاده‌سازی Error Boundaries در React',
        description:
          'Error Boundaries را در یک پروژه React پیاده‌سازی کنید. این شامل تعریف کامپوننت‌های Error Boundary و مدیریت خطاهای رندرینگ در اپلیکیشن است.',
      },
      {
        title: 'ساخت یک سیستم Routing با React Router',
        description:
          'سیستم Routing را با استفاده از React Router پیاده‌سازی کنید. این شامل تعریف مسیرها، لینک‌ها و نمایش کامپوننت‌های مختلف بر اساس مسیر انتخاب شده است.',
      },
      {
        title: 'پیاده‌سازی یک سیستم Authentication با React',
        description:
          'سیستم Authentication را با استفاده از React پیاده‌سازی کنید. این شامل مدیریت ورود و خروج کاربران، ذخیره توکن‌ها و مدیریت وضعیت احراز هویت است.',
      },
    ],
    level3: [
      {
        title: 'ساخت یک اپلیکیشن با قابلیت Server-Side Rendering',
        description:
          'یک اپلیکیشن React با قابلیت Server-Side Rendering (SSR) بسازید. این اپلیکیشن باید قادر به رندر کردن صفحات در سرور و ارسال HTML به کلاینت باشد.',
      },
      {
        title: 'پیاده‌سازی یک کامپوننت پیشرفته با Redux',
        description:
          'کامپوننتی پیشرفته با استفاده از Redux برای مدیریت وضعیت بسازید. این شامل تعریف Action، Reducer و استفاده از آنها در کامپوننت‌ها است.',
      },
      {
        title: 'ساخت یک سیستم Advanced Routing با React Router',
        description:
          'سیستم Routing پیشرفته با استفاده از React Router بسازید. این شامل مدیریت مسیرهای پیچیده، مسیریابی دینامیک و محافظت از مسیرها با استفاده از Guard است.',
      },
      {
        title: 'پیاده‌سازی یک سیستم State Management با Context API و Reducer',
        description:
          'مدیریت وضعیت پیچیده با استفاده از Context API و useReducer را پیاده‌سازی کنید. این شامل ایجاد Context، Provider و استفاده از useReducer برای مدیریت وضعیت است.',
      },
      {
        title: 'ساخت یک کامپوننت با استفاده از Render Props',
        description:
          'کامپوننتی بسازید که از Render Props برای مدیریت عملکرد و تعاملات استفاده کند. این کامپوننت باید بتواند عملکردهای مختلف را به عنوان props دریافت کرده و بر اساس آنها عمل کند.',
      },
      {
        title: 'پیاده‌سازی یک سیستم Notification با استفاده از Context',
        description:
          'سیستم Notification را با استفاده از Context API پیاده‌سازی کنید. این سیستم باید قادر به ارسال و دریافت اعلان‌ها و نمایش آنها در UI باشد.',
      },
      {
        title: 'ساخت یک سیستم مدیریت وضعیت با Recoil',
        description:
          'مدیریت وضعیت با استفاده از Recoil در یک پروژه React پیاده‌سازی کنید. این شامل ایجاد Atoms، Selectors و استفاده از آنها در کامپوننت‌ها است.',
      },
      {
        title: 'پیاده‌سازی Server-Side Data Fetching با React Query',
        description:
          'داده‌ها را با استفاده از React Query در یک اپلیکیشن React بارگذاری کنید. این شامل تنظیمات Query، Mutation و مدیریت وضعیت بارگذاری و خطا است.',
      },
      {
        title: 'ساخت یک سیستم Layout با استفاده از Higher-Order Components',
        description:
          'سیستم Layout را با استفاده از Higher-Order Components (HOCs) پیاده‌سازی کنید. این سیستم باید قادر به اعمال لایه‌بندی‌های مختلف بر روی کامپوننت‌ها باشد.',
      },
      {
        title: 'پیاده‌سازی یک سیستم Dynamic Form با استفاده از Formik',
        description:
          'سیستم فرم‌های داینامیک را با استفاده از Formik پیاده‌سازی کنید. این شامل ایجاد فرم‌هایی با ورودی‌های داینامیک و مدیریت اعتبارسنجی است.',
      },
    ],
  },
};

export const nextjs = {
  nextjs: {
    level1: [
      {
        title: 'ساخت یک صفحه اصلی ساده با Next.js',
        description:
          'یک صفحه اصلی ساده با استفاده از Next.js بسازید که شامل یک هدر، یک بخش محتوای اصلی و یک فوتر باشد. این صفحه باید با استفاده از CSS Module استایل‌دهی شده باشد.',
      },
      {
        title: 'پیاده‌سازی Static Generation با Next.js',
        description:
          'یک صفحه استاتیک با استفاده از Static Generation (getStaticProps) در Next.js بسازید. این صفحه باید داده‌های مورد نیاز را از قبل بارگذاری کند و به کاربران نمایش دهد.',
      },
      {
        title: 'ساخت یک صفحه درباره ما با Next.js',
        description:
          'یک صفحه درباره ما با استفاده از Next.js بسازید که شامل اطلاعاتی درباره تیم، اهداف و تاریخچه شرکت باشد. این صفحه باید شامل متنی، تصاویر و لینک‌ها باشد.',
      },
      {
        title: 'پیاده‌سازی Dynamic Routing با Next.js',
        description:
          'مسیرهای دینامیک (Dynamic Routing) را با استفاده از Next.js پیاده‌سازی کنید. این شامل ایجاد مسیرهای دینامیک و نمایش محتوای مختلف بر اساس پارامترهای URL است.',
      },
      {
        title: 'ساخت یک فرم ساده با Next.js',
        description:
          'یک فرم ساده با استفاده از Next.js بسازید که شامل ورودی‌های نام و ایمیل و یک دکمه ارسال باشد. این فرم باید بتواند داده‌های ورودی را به‌درستی پردازش کند.',
      },
      {
        title: 'پیاده‌سازی Link Component برای ناوبری',
        description:
          'کامپوننت Link را برای ناوبری بین صفحات مختلف در Next.js استفاده کنید. این شامل ایجاد لینک‌هایی برای جابجایی بین صفحات مختلف است.',
      },
      {
        title: 'ساخت یک صفحه خطا سفارشی با Next.js',
        description:
          'یک صفحه خطا سفارشی با استفاده از Next.js بسازید. این صفحه باید به‌طور مناسب خطاها را مدیریت کرده و پیغام‌های مناسبی به کاربران نمایش دهد.',
      },
      {
        title: 'پیاده‌سازی API Routes با Next.js',
        description:
          'مسیرهای API را با استفاده از Next.js پیاده‌سازی کنید. این شامل ایجاد فایل‌های API در پوشه pages/api و مدیریت درخواست‌های مختلف است.',
      },
      {
        title: 'ساخت یک صفحه محصول با Next.js',
        description:
          'یک صفحه محصول با استفاده از Next.js بسازید که شامل جزئیات محصول، تصاویر و دکمه خرید باشد. این صفحه باید داده‌های محصول را به‌درستی نمایش دهد.',
      },
      {
        title: 'پیاده‌سازی یک هدر ثابت با Next.js',
        description:
          'یک هدر ثابت با استفاده از Next.js بسازید که در تمامی صفحات اپلیکیشن نمایش داده شود. این هدر باید شامل لینک‌های ناوبری و نام برند باشد.',
      },
    ],
    level2: [
      {
        title: 'ساخت یک اپلیکیشن Blog با Next.js',
        description:
          'یک اپلیکیشن وبلاگ با استفاده از Next.js بسازید. این اپلیکیشن باید شامل صفحات مختلف، پست‌های وبلاگ، و قابلیت‌های جستجو و فیلتر باشد.',
      },
      {
        title: 'پیاده‌سازی Server-Side Rendering با Next.js',
        description:
          'یک صفحه با استفاده از Server-Side Rendering (getServerSideProps) در Next.js بسازید. این صفحه باید داده‌ها را در زمان درخواست بارگذاری کند و به‌طور داینامیک نمایش دهد.',
      },
      {
        title: 'ساخت یک سیستم Auth با Next.js',
        description:
          'سیستم Auth با استفاده از Next.js بسازید. این شامل مدیریت ورود و خروج کاربران، ذخیره توکن‌ها و مدیریت وضعیت احراز هویت است.',
      },
      {
        title: 'پیاده‌سازی Static Site Generation با Dynamic Content',
        description:
          'Static Site Generation را با محتوای داینامیک در Next.js پیاده‌سازی کنید. این شامل استفاده از getStaticPaths برای ایجاد صفحات داینامیک است.',
      },
      {
        title: 'ساخت یک داشبورد مدیریت با Next.js',
        description:
          'یک داشبورد مدیریت با استفاده از Next.js بسازید. این داشبورد باید شامل بخش‌های مختلفی برای مدیریت کاربران، پست‌ها و تنظیمات باشد.',
      },
      {
        title: 'پیاده‌سازی یک سیستم Localization با Next.js',
        description:
          'سیستم Localization را با استفاده از Next.js پیاده‌سازی کنید. این شامل مدیریت ترجمه‌ها و نمایش محتوای متناسب با زبان کاربر است.',
      },
      {
        title: 'ساخت یک سیستم Dynamic Import با Next.js',
        description:
          'سیستم Dynamic Import را با استفاده از Next.js پیاده‌سازی کنید. این شامل بارگذاری تنبل (Lazy Loading) ماژول‌ها و کامپوننت‌ها است.',
      },
      {
        title: 'پیاده‌سازی کش کردن داده‌ها با Next.js',
        description:
          'کش کردن داده‌ها را با استفاده از Next.js پیاده‌سازی کنید. این شامل استفاده از ابزارهایی مانند SWR برای مدیریت کش است.',
      },
      {
        title: 'ساخت یک سیستم فرم پیشرفته با Next.js',
        description:
          'سیستم فرم‌های پیشرفته را با استفاده از Next.js و یک کتابخانه مانند Formik پیاده‌سازی کنید. این شامل مدیریت ورودی‌ها، اعتبارسنجی و ارسال فرم است.',
      },
      {
        title: 'پیاده‌سازی یک سیستم Analytics با Next.js',
        description:
          'سیستم Analytics را با استفاده از Next.js پیاده‌سازی کنید. این شامل جمع‌آوری و نمایش داده‌های تحلیلی در اپلیکیشن است.',
      },
    ],
    level3: [
      {
        title: 'ساخت یک اپلیکیشن با استفاده از Next.js و TypeScript',
        description:
          'یک اپلیکیشن پیچیده با استفاده از Next.js و TypeScript بسازید. این اپلیکیشن باید شامل انواع مختلف داده، پیاده‌سازی TypeScript و ویژگی‌های پیشرفته Next.js باشد.',
      },
      {
        title: 'پیاده‌سازی Authentication با JWT در Next.js',
        description:
          'سیستم Authentication با استفاده از JWT در Next.js پیاده‌سازی کنید. این شامل مدیریت توکن‌های JWT و اعتبارسنجی درخواست‌ها است.',
      },
      {
        title: 'ساخت یک سیستم CMS با Next.js و GraphQL',
        description:
          'سیستم مدیریت محتوا (CMS) را با استفاده از Next.js و GraphQL بسازید. این شامل تعریف اسکیمای GraphQL، پیاده‌سازی کوئری‌ها و ایجاد رابط کاربری است.',
      },
      {
        title:
          'پیاده‌سازی Static Generation با Incremental Static Regeneration',
        description:
          'Static Generation با Incremental Static Regeneration (ISR) را در Next.js پیاده‌سازی کنید. این شامل به‌روزرسانی‌های داینامیک صفحات استاتیک در پس‌زمینه است.',
      },
      {
        title: 'ساخت یک سیستم Advanced Analytics با Next.js',
        description:
          'سیستم Advanced Analytics را با استفاده از Next.js پیاده‌سازی کنید. این شامل جمع‌آوری، تجزیه و تحلیل داده‌ها و نمایش گزارش‌های پیشرفته است.',
      },
      {
        title: 'پیاده‌سازی Real-Time Features با Next.js و WebSockets',
        description:
          'ویژگی‌های Real-Time را با استفاده از Next.js و WebSockets پیاده‌سازی کنید. این شامل ارسال و دریافت پیام‌ها به‌صورت زنده و به‌روزرسانی‌های آنی است.',
      },
      {
        title: 'ساخت یک سیستم Headless CMS با Next.js و Contentful',
        description:
          'سیستم Headless CMS را با استفاده از Next.js و Contentful بسازید. این شامل مدیریت محتوا از طریق API و نمایش آن در اپلیکیشن Next.js است.',
      },
      {
        title: 'پیاده‌سازی Multi-Tenancy با Next.js',
        description:
          'سیستم Multi-Tenancy را با استفاده از Next.js پیاده‌سازی کنید. این شامل مدیریت چندین فضای کاربری و داده‌های مستقل از یکدیگر است.',
      },
      {
        title: 'ساخت یک سیستم A/B Testing با Next.js',
        description:
          'سیستم A/B Testing را با استفاده از Next.js پیاده‌سازی کنید. این شامل ایجاد و اجرای آزمایش‌های A/B و تجزیه و تحلیل نتایج است.',
      },
      {
        title: 'پیاده‌سازی یک سیستم Search با استفاده از Algolia',
        description:
          'سیستم جستجو را با استفاده از Next.js و Algolia پیاده‌سازی کنید. این شامل جستجو در داده‌های بزرگ و نمایش نتایج جستجو است.',
      },
    ],
  },
  frontend: {
    level1: [
      {
        title: 'ساخت یک صفحه وب ساده با HTML و CSS',
        description:
          'یک صفحه وب ساده با استفاده از HTML و CSS بسازید که شامل یک هدر، یک بخش محتوای اصلی و یک فوتر باشد. این صفحه باید به‌درستی استایل‌دهی شده و واکنش‌گرا باشد.',
      },
      {
        title: 'ساخت یک فرم ساده با HTML و CSS',
        description:
          'یک فرم ساده با استفاده از HTML و CSS بسازید که شامل فیلدهای ورودی برای نام، ایمیل و پیام باشد. این فرم باید به‌درستی استایل‌دهی شده و قابل استفاده باشد.',
      },
      {
        title: 'استفاده از Flexbox برای طراحی صفحه',
        description:
          'یک صفحه وب با استفاده از Flexbox طراحی کنید. این صفحه باید شامل چندین بخش با چیدمان‌های مختلف باشد و به‌طور مناسب واکنش‌گرا باشد.',
      },
      {
        title: 'ساخت یک لیست آیتم‌ها با HTML و CSS',
        description:
          'یک لیست ساده از آیتم‌ها با استفاده از HTML و CSS بسازید. این لیست باید شامل آیتم‌های مختلف با استایل‌دهی مناسب باشد.',
      },
      {
        title: 'پیاده‌سازی Grid Layout برای طراحی صفحه',
        description:
          'یک صفحه وب با استفاده از Grid Layout طراحی کنید. این صفحه باید شامل چندین بخش با چیدمان‌های مختلف باشد و به‌طور مناسب واکنش‌گرا باشد.',
      },
      {
        title: 'ساخت یک دکمه سفارشی با CSS',
        description:
          'یک دکمه سفارشی با استفاده از CSS بسازید که شامل استایل‌های مختلف مانند تغییر رنگ، سایه و انیمیشن باشد.',
      },
      {
        title: 'استفاده از Media Queries برای طراحی واکنش‌گرا',
        description:
          'یک صفحه وب با استفاده از Media Queries طراحی کنید که به‌طور مناسب در اندازه‌های مختلف صفحه نمایش نمایش داده شود.',
      },
      {
        title: 'ساخت یک کارت محصول با HTML و CSS',
        description:
          'یک کارت محصول با استفاده از HTML و CSS بسازید که شامل تصویر، عنوان، توضیحات و دکمه خرید باشد. این کارت باید به‌درستی استایل‌دهی شده و واکنش‌گرا باشد.',
      },
      {
        title: 'پیاده‌سازی Transitions و Animations با CSS',
        description:
          'یک صفحه وب با استفاده از Transitions و Animations طراحی کنید. این صفحه باید شامل انیمیشن‌ها و انتقال‌های مختلف باشد که تجربه کاربری بهتری را فراهم کند.',
      },
      {
        title: 'ساخت یک منوی ناوبری با CSS',
        description:
          'یک منوی ناوبری با استفاده از CSS بسازید که شامل لینک‌های مختلف و استایل‌های مناسب باشد. این منو باید به‌طور واکنش‌گرا عمل کند.',
      },
    ],
    level2: [
      {
        title: 'ساخت یک سیستم تمیز با BEM',
        description:
          'یک صفحه وب با استفاده از روش BEM (Block Element Modifier) طراحی کنید. این صفحه باید شامل ساختار مناسب CSS و کدهای تمیز و قابل مدیریت باشد.',
      },
      {
        title: 'پیاده‌سازی طراحی واکنش‌گرا با Bootstrap',
        description:
          'یک صفحه وب با استفاده از Bootstrap طراحی کنید. این صفحه باید شامل ویژگی‌های مختلف Bootstrap و طراحی واکنش‌گرا باشد.',
      },
      {
        title: 'ساخت یک فرم پیشرفته با JavaScript',
        description:
          'یک فرم پیشرفته با استفاده از JavaScript بسازید که شامل اعتبارسنجی ورودی‌ها و نمایش پیام‌های خطا باشد.',
      },
      {
        title: 'ساخت یک سیستم جستجو با JavaScript',
        description:
          'یک سیستم جستجو با استفاده از JavaScript بسازید که شامل قابلیت جستجو در داده‌ها و نمایش نتایج جستجو باشد.',
      },
      {
        title: 'پیاده‌سازی انیمیشن‌های پیشرفته با CSS و JavaScript',
        description:
          'یک صفحه وب با استفاده از انیمیشن‌های پیشرفته با CSS و JavaScript طراحی کنید. این صفحه باید شامل انیمیشن‌های مختلف و تعاملات پویا باشد.',
      },
      {
        title: 'ساخت یک صفحه وب چند صفحه‌ای با JavaScript',
        description:
          'یک صفحه وب چند صفحه‌ای با استفاده از JavaScript بسازید. این صفحه باید شامل ناوبری بین صفحات مختلف و بارگذاری محتوای جدید باشد.',
      },
      {
        title: 'پیاده‌سازی سیستم نظردهی با JavaScript',
        description:
          'یک سیستم نظردهی با استفاده از JavaScript بسازید که شامل افزودن نظرات، نمایش نظرات و حذف آنها باشد.',
      },
      {
        title: 'ساخت یک Dashboard با JavaScript',
        description:
          'یک داشبورد با استفاده از JavaScript بسازید که شامل نمودارها، جدول‌ها و اطلاعات مختلف باشد.',
      },
      {
        title: 'پیاده‌سازی یک سیستم Lightbox با JavaScript',
        description:
          'سیستم Lightbox را با استفاده از JavaScript پیاده‌سازی کنید. این شامل نمایش تصاویر به‌صورت بزرگ‌تر و قابلیت جابجایی بین تصاویر است.',
      },
      {
        title: 'ساخت یک سیستم فرم چند مرحله‌ای با JavaScript',
        description:
          'سیستم فرم‌های چند مرحله‌ای را با استفاده از JavaScript بسازید. این شامل نمایش فرم‌ها در مراحل مختلف و مدیریت وضعیت در بین مراحل است.',
      },
    ],
    level3: [
      {
        title: 'ساخت یک سیستم Dynamic Data Binding با JavaScript',
        description:
          'سیستم Dynamic Data Binding را با استفاده از JavaScript بسازید. این شامل ارتباط دوطرفه بین داده‌ها و رابط کاربری است.',
      },
      {
        title: 'پیاده‌سازی یک سیستم State Management با JavaScript',
        description:
          'سیستم مدیریت وضعیت با استفاده از JavaScript بسازید. این شامل مدیریت وضعیت اپلیکیشن و تعاملات مختلف است.',
      },
      {
        title: 'ساخت یک اپلیکیشن SPA با JavaScript و AJAX',
        description:
          'یک اپلیکیشن تک‌صفحه‌ای (SPA) با استفاده از JavaScript و AJAX بسازید. این اپلیکیشن باید شامل بارگذاری محتوای جدید بدون بارگذاری مجدد صفحه باشد.',
      },
      {
        title: 'پیاده‌سازی یک سیستم Routing با JavaScript',
        description:
          'سیستم Routing را با استفاده از JavaScript پیاده‌سازی کنید. این شامل مدیریت مسیرها و نمایش محتوای مختلف بر اساس مسیر انتخاب شده است.',
      },
      {
        title: 'ساخت یک سیستم بهینه‌سازی عملکرد با JavaScript',
        description:
          'سیستم بهینه‌سازی عملکرد را با استفاده از JavaScript بسازید. این شامل تکنیک‌های مختلف برای بهبود عملکرد اپلیکیشن است.',
      },
      {
        title: 'پیاده‌سازی سیستم Real-Time Data با WebSockets',
        description:
          'سیستم Real-Time Data را با استفاده از WebSockets و JavaScript پیاده‌سازی کنید. این شامل ارسال و دریافت داده‌ها به‌صورت زنده و به‌روزرسانی‌های آنی است.',
      },
      {
        title: 'ساخت یک سیستم مدیریت داده‌های پیچیده با JavaScript',
        description:
          'سیستم مدیریت داده‌های پیچیده را با استفاده از JavaScript بسازید. این شامل مدیریت، تجزیه و تحلیل و نمایش داده‌های پیچیده است.',
      },
      {
        title: 'پیاده‌سازی یک سیستم Testing با JavaScript',
        description:
          'سیستم Testing را با استفاده از JavaScript پیاده‌سازی کنید. این شامل نوشتن و اجرای تست‌های مختلف برای کدهای JavaScript است.',
      },
      {
        title: 'ساخت یک سیستم Performance Monitoring با JavaScript',
        description:
          'سیستم Performance Monitoring را با استفاده از JavaScript بسازید. این شامل جمع‌آوری و تجزیه و تحلیل داده‌های عملکرد اپلیکیشن است.',
      },
      {
        title: 'پیاده‌سازی یک سیستم Progressive Web App (PWA) با JavaScript',
        description:
          'سیستم Progressive Web App (PWA) را با استفاده از JavaScript پیاده‌سازی کنید. این شامل ویژگی‌های مختلف PWA مانند کارکرد آفلاین و نصب اپلیکیشن است.',
      },
    ],
  },
};

export const frontend = {
  frontend: {
    level1: [
      {
        title: 'ساخت یک صفحه وب ساده با HTML و CSS',
        description:
          'یک صفحه وب ساده با استفاده از HTML و CSS بسازید که شامل یک هدر، یک بخش محتوای اصلی و یک فوتر باشد. این صفحه باید به‌درستی استایل‌دهی شده و واکنش‌گرا باشد.',
      },
      {
        title: 'ساخت یک فرم ساده با HTML و CSS',
        description:
          'یک فرم ساده با استفاده از HTML و CSS بسازید که شامل فیلدهای ورودی برای نام، ایمیل و پیام باشد. این فرم باید به‌درستی استایل‌دهی شده و قابل استفاده باشد.',
      },
      {
        title: 'استفاده از Flexbox برای طراحی صفحه',
        description:
          'یک صفحه وب با استفاده از Flexbox طراحی کنید. این صفحه باید شامل چندین بخش با چیدمان‌های مختلف باشد و به‌طور مناسب واکنش‌گرا باشد.',
      },
      {
        title: 'ساخت یک لیست آیتم‌ها با HTML و CSS',
        description:
          'یک لیست ساده از آیتم‌ها با استفاده از HTML و CSS بسازید. این لیست باید شامل آیتم‌های مختلف با استایل‌دهی مناسب باشد.',
      },
      {
        title: 'پیاده‌سازی Grid Layout برای طراحی صفحه',
        description:
          'یک صفحه وب با استفاده از Grid Layout طراحی کنید. این صفحه باید شامل چندین بخش با چیدمان‌های مختلف باشد و به‌طور مناسب واکنش‌گرا باشد.',
      },
      {
        title: 'ساخت یک دکمه سفارشی با CSS',
        description:
          'یک دکمه سفارشی با استفاده از CSS بسازید که شامل استایل‌های مختلف مانند تغییر رنگ، سایه و انیمیشن باشد.',
      },
      {
        title: 'استفاده از Media Queries برای طراحی واکنش‌گرا',
        description:
          'یک صفحه وب با استفاده از Media Queries طراحی کنید که به‌طور مناسب در اندازه‌های مختلف صفحه نمایش نمایش داده شود.',
      },
      {
        title: 'ساخت یک کارت محصول با HTML و CSS',
        description:
          'یک کارت محصول با استفاده از HTML و CSS بسازید که شامل تصویر، عنوان، توضیحات و دکمه خرید باشد. این کارت باید به‌درستی استایل‌دهی شده و واکنش‌گرا باشد.',
      },
      {
        title: 'پیاده‌سازی Transitions و Animations با CSS',
        description:
          'یک صفحه وب با استفاده از Transitions و Animations طراحی کنید. این صفحه باید شامل انیمیشن‌ها و انتقال‌های مختلف باشد که تجربه کاربری بهتری را فراهم کند.',
      },
      {
        title: 'ساخت یک منوی ناوبری با CSS',
        description:
          'یک منوی ناوبری با استفاده از CSS بسازید که شامل لینک‌های مختلف و استایل‌های مناسب باشد. این منو باید به‌طور واکنش‌گرا عمل کند.',
      },
    ],
    level2: [
      {
        title: 'ساخت یک سیستم تمیز با BEM',
        description:
          'یک صفحه وب با استفاده از روش BEM (Block Element Modifier) طراحی کنید. این صفحه باید شامل ساختار مناسب CSS و کدهای تمیز و قابل مدیریت باشد.',
      },
      {
        title: 'پیاده‌سازی طراحی واکنش‌گرا با Bootstrap',
        description:
          'یک صفحه وب با استفاده از Bootstrap طراحی کنید. این صفحه باید شامل ویژگی‌های مختلف Bootstrap و طراحی واکنش‌گرا باشد.',
      },
      {
        title: 'ساخت یک فرم پیشرفته با JavaScript',
        description:
          'یک فرم پیشرفته با استفاده از JavaScript بسازید که شامل اعتبارسنجی ورودی‌ها و نمایش پیام‌های خطا باشد.',
      },
      {
        title: 'ساخت یک سیستم جستجو با JavaScript',
        description:
          'یک سیستم جستجو با استفاده از JavaScript بسازید که شامل قابلیت جستجو در داده‌ها و نمایش نتایج جستجو باشد.',
      },
      {
        title: 'پیاده‌سازی انیمیشن‌های پیشرفته با CSS و JavaScript',
        description:
          'یک صفحه وب با استفاده از انیمیشن‌های پیشرفته با CSS و JavaScript طراحی کنید. این صفحه باید شامل انیمیشن‌های مختلف و تعاملات پویا باشد.',
      },
      {
        title: 'ساخت یک صفحه وب چند صفحه‌ای با JavaScript',
        description:
          'یک صفحه وب چند صفحه‌ای با استفاده از JavaScript بسازید. این صفحه باید شامل ناوبری بین صفحات مختلف و بارگذاری محتوای جدید باشد.',
      },
      {
        title: 'پیاده‌سازی سیستم نظردهی با JavaScript',
        description:
          'یک سیستم نظردهی با استفاده از JavaScript بسازید که شامل افزودن نظرات، نمایش نظرات و حذف آنها باشد.',
      },
      {
        title: 'ساخت یک Dashboard با JavaScript',
        description:
          'یک داشبورد با استفاده از JavaScript بسازید که شامل نمودارها، جدول‌ها و اطلاعات مختلف باشد.',
      },
      {
        title: 'پیاده‌سازی یک سیستم Lightbox با JavaScript',
        description:
          'سیستم Lightbox را با استفاده از JavaScript پیاده‌سازی کنید. این شامل نمایش تصاویر به‌صورت بزرگ‌تر و قابلیت جابجایی بین تصاویر است.',
      },
      {
        title: 'ساخت یک سیستم فرم چند مرحله‌ای با JavaScript',
        description:
          'سیستم فرم‌های چند مرحله‌ای را با استفاده از JavaScript بسازید. این شامل نمایش فرم‌ها در مراحل مختلف و مدیریت وضعیت در بین مراحل است.',
      },
    ],
    level3: [
      {
        title: 'ساخت یک سیستم Dynamic Data Binding با JavaScript',
        description:
          'سیستم Dynamic Data Binding را با استفاده از JavaScript بسازید. این شامل ارتباط دوطرفه بین داده‌ها و رابط کاربری است.',
      },
      {
        title: 'پیاده‌سازی یک سیستم State Management با JavaScript',
        description:
          'سیستم مدیریت وضعیت با استفاده از JavaScript بسازید. این شامل مدیریت وضعیت اپلیکیشن و تعاملات مختلف است.',
      },
      {
        title: 'ساخت یک اپلیکیشن SPA با JavaScript و AJAX',
        description:
          'یک اپلیکیشن تک‌صفحه‌ای (SPA) با استفاده از JavaScript و AJAX بسازید. این اپلیکیشن باید شامل بارگذاری محتوای جدید بدون بارگذاری مجدد صفحه باشد.',
      },
      {
        title: 'پیاده‌سازی یک سیستم Routing با JavaScript',
        description:
          'سیستم Routing را با استفاده از JavaScript پیاده‌سازی کنید. این شامل مدیریت مسیرها و نمایش محتوای مختلف بر اساس مسیر انتخاب شده است.',
      },
      {
        title: 'ساخت یک سیستم بهینه‌سازی عملکرد با JavaScript',
        description:
          'سیستم بهینه‌سازی عملکرد را با استفاده از JavaScript بسازید. این شامل تکنیک‌های مختلف برای بهبود عملکرد اپلیکیشن است.',
      },
      {
        title: 'پیاده‌سازی سیستم Real-Time Data با WebSockets',
        description:
          'سیستم Real-Time Data را با استفاده از WebSockets و JavaScript پیاده‌سازی کنید. این شامل ارسال و دریافت داده‌ها به‌صورت زنده و به‌روزرسانی‌های آنی است.',
      },
      {
        title: 'ساخت یک سیستم مدیریت داده‌های پیچیده با JavaScript',
        description:
          'سیستم مدیریت داده‌های پیچیده را با استفاده از JavaScript بسازید. این شامل مدیریت، تجزیه و تحلیل و نمایش داده‌های پیچیده است.',
      },
      {
        title: 'پیاده‌سازی یک سیستم Testing با JavaScript',
        description:
          'سیستم Testing را با استفاده از JavaScript پیاده‌سازی کنید. این شامل نوشتن و اجرای تست‌های مختلف برای کدهای JavaScript است.',
      },
      {
        title: 'ساخت یک سیستم Performance Monitoring با JavaScript',
        description:
          'سیستم Performance Monitoring را با استفاده از JavaScript بسازید. این شامل جمع‌آوری و تجزیه و تحلیل داده‌های عملکرد اپلیکیشن است.',
      },
      {
        title: 'پیاده‌سازی یک سیستم Progressive Web App (PWA) با JavaScript',
        description:
          'سیستم Progressive Web App (PWA) را با استفاده از JavaScript پیاده‌سازی کنید. این شامل ویژگی‌های مختلف PWA مانند کارکرد آفلاین و نصب اپلیکیشن است.',
      },
    ],
  },
};
